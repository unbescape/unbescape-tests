/*
 * =============================================================================
 * 
 *   Copyright (c) 2014-2025 Unbescape (http://www.unbescape.org)
 * 
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 * 
 * =============================================================================
 */
package org.unbescape.css;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

/**
 * 
 * @author Daniel Fern&aacute;ndez
 * 
 * @since 1.0
 *
 */
public class AuxEscapeTest {







    @Test
    public void testToCompactHexaIdentifier() throws Exception {

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0; i <= 0x02FF; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =
                    "FE00FE01FE02FE03FE04FE05FE06FE07FE08FE09FE0AFE0BFE0CFE0DFE0EFE0FFE10FE11FE12FE13FE14FE15FE16FE17FE18FE19FE1AFE1BFE1CFE1DFE1EFE1FFE20FE21FE22FE23FE24FE25FE26FE27FE28FE29FE2AFE2BFE2CFE2DFE2EFE2FFE30FE31FE32FE33FE34FE35FE36FE37FE38FE39FE3AFE3BFE3CFE3DFE3EFE3FFE40FE41FE42FE43FE44FE45FE46FE47FE48FE49FE4AFE4BFE4CFE4DFE4EFE4FFE50FE51FE52FE53FE54FE55FE56FE57FE58FE59FE5AFE5BFE5CFE5DFE5EFE5FFE60FE61FE62FE63FE64FE65FE66FE67FE68FE69FE6AFE6BFE6CFE6DFE6EFE6FFE70FE71FE72FE73FE74FE75FE76FE77FE78FE79FE7AFE7BFE7CFE7DFE7EFE7FFE80FE81FE82FE83FE84FE85FE86FE87FE88FE89FE8AFE8BFE8CFE8DFE8EFE8FFE90FE91FE92FE93FE94FE95FE96FE97FE98FE99FE9AFE9BFE9CFE9DFE9EFE9FFEA0FEA1FEA2FEA3FEA4FEA5FEA6FEA7FEA8FEA9FEAAFEABFEACFEADFEAEFEAFFEB0FEB1FEB2FEB3FEB4FEB5FEB6FEB7FEB8FEB9FEBAFEBBFEBCFEBDFEBEFEBFFEC0FEC1FEC2FEC3FEC4FEC5FEC6FEC7FEC8FEC9FECAFECBFECCFECDFECEFECFFED0FED1FED2FED3FED4FED5FED6FED7FED8FED9FEDAFEDBFEDCFEDDFEDEFEDFFEE0FEE1FEE2FEE3FEE4FEE5FEE6FEE7FEE8FEE9FEEAFEEBFEECFEEDFEEEFEEFFEF0FEF1FEF2FEF3FEF4FEF5FEF6FEF7FEF8FEF9FEFAFEFBFEFCFEFDFEFEFEFFFF00FF01FF02FF03FF04FF05FF06FF07FF08FF09FF0AFF0BFF0CFF0DFF0EFF0FFF10FF11FF12FF13FF14FF15FF16FF17FF18FF19FF1AFF1BFF1CFF1DFF1EFF1FFF20FF21FF22FF23FF24FF25FF26FF27FF28FF29FF2AFF2BFF2CFF2DFF2EFF2FFF30FF31FF32FF33FF34FF35FF36FF37FF38FF39FF3AFF3BFF3CFF3DFF3EFF3FFF40FF41FF42FF43FF44FF45FF46FF47FF48FF49FF4AFF4BFF4CFF4DFF4EFF4FFF50FF51FF52FF53FF54FF55FF56FF57FF58FF59FF5AFF5BFF5CFF5DFF5EFF5FFF60FF61FF62FF63FF64FF65FF66FF67FF68FF69FF6AFF6BFF6CFF6DFF6EFF6FFF70FF71FF72FF73FF74FF75FF76FF77FF78FF79FF7AFF7BFF7CFF7DFF7EFF7FFF80FF81FF82FF83FF84FF85FF86FF87FF88FF89FF8AFF8BFF8CFF8DFF8EFF8FFF90FF91FF92FF93FF94FF95FF96FF97FF98FF99FF9AFF9BFF9CFF9DFF9EFF9FFFA0FFA1FFA2FFA3FFA4FFA5FFA6FFA7FFA8FFA9FFAAFFABFFACFFADFFAEFFAFFFB0FFB1FFB2FFB3FFB4FFB5FFB6FFB7FFB8FFB9FFBAFFBBFFBCFFBDFFBEFFBFFFC0FFC1FFC2FFC3FFC4FFC5FFC6FFC7FFC8FFC9FFCAFFCBFFCCFFCDFFCEFFCFFFD0FFD1FFD2FFD3FFD4FFD5FFD6FFD7FFD8FFD9FFDAFFDBFFDCFFDDFFDEFFDFFFE0FFE1FFE2FFE3FFE4FFE5FFE6FFE7FFE8FFE9FFEAFFEBFFECFFEDFFEEFFEFFFF0FFF1FFF2FFF3FFF4FFF5FFF6FFF7FFF8FFF9FFFAFFFBFFFCFFFDFFFEFFFF";

            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFE00; i <= 0xFFFF; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFFE00; i <= 0x100020; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0x10FE00; i <= 0x10FFFF; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

    }



    @Test
    public void testToSixDigitHexaIdentifier() throws Exception {

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0; i <= 0x02FF; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFE00; i <= 0xFFFF; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFFE00; i <= 0x100020; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }


        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0x10FE00; i <= 0x10FFFF; i++) {
                strBuilder.append(CssIdentifierEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

    }






    @Test
    public void testToCompactHexaString() throws Exception {

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0; i <= 0x02FF; i++) {
                strBuilder.append(CssStringEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =
                    "FE00FE01FE02FE03FE04FE05FE06FE07FE08FE09FE0AFE0BFE0CFE0DFE0EFE0FFE10FE11FE12FE13FE14FE15FE16FE17FE18FE19FE1AFE1BFE1CFE1DFE1EFE1FFE20FE21FE22FE23FE24FE25FE26FE27FE28FE29FE2AFE2BFE2CFE2DFE2EFE2FFE30FE31FE32FE33FE34FE35FE36FE37FE38FE39FE3AFE3BFE3CFE3DFE3EFE3FFE40FE41FE42FE43FE44FE45FE46FE47FE48FE49FE4AFE4BFE4CFE4DFE4EFE4FFE50FE51FE52FE53FE54FE55FE56FE57FE58FE59FE5AFE5BFE5CFE5DFE5EFE5FFE60FE61FE62FE63FE64FE65FE66FE67FE68FE69FE6AFE6BFE6CFE6DFE6EFE6FFE70FE71FE72FE73FE74FE75FE76FE77FE78FE79FE7AFE7BFE7CFE7DFE7EFE7FFE80FE81FE82FE83FE84FE85FE86FE87FE88FE89FE8AFE8BFE8CFE8DFE8EFE8FFE90FE91FE92FE93FE94FE95FE96FE97FE98FE99FE9AFE9BFE9CFE9DFE9EFE9FFEA0FEA1FEA2FEA3FEA4FEA5FEA6FEA7FEA8FEA9FEAAFEABFEACFEADFEAEFEAFFEB0FEB1FEB2FEB3FEB4FEB5FEB6FEB7FEB8FEB9FEBAFEBBFEBCFEBDFEBEFEBFFEC0FEC1FEC2FEC3FEC4FEC5FEC6FEC7FEC8FEC9FECAFECBFECCFECDFECEFECFFED0FED1FED2FED3FED4FED5FED6FED7FED8FED9FEDAFEDBFEDCFEDDFEDEFEDFFEE0FEE1FEE2FEE3FEE4FEE5FEE6FEE7FEE8FEE9FEEAFEEBFEECFEEDFEEEFEEFFEF0FEF1FEF2FEF3FEF4FEF5FEF6FEF7FEF8FEF9FEFAFEFBFEFCFEFDFEFEFEFFFF00FF01FF02FF03FF04FF05FF06FF07FF08FF09FF0AFF0BFF0CFF0DFF0EFF0FFF10FF11FF12FF13FF14FF15FF16FF17FF18FF19FF1AFF1BFF1CFF1DFF1EFF1FFF20FF21FF22FF23FF24FF25FF26FF27FF28FF29FF2AFF2BFF2CFF2DFF2EFF2FFF30FF31FF32FF33FF34FF35FF36FF37FF38FF39FF3AFF3BFF3CFF3DFF3EFF3FFF40FF41FF42FF43FF44FF45FF46FF47FF48FF49FF4AFF4BFF4CFF4DFF4EFF4FFF50FF51FF52FF53FF54FF55FF56FF57FF58FF59FF5AFF5BFF5CFF5DFF5EFF5FFF60FF61FF62FF63FF64FF65FF66FF67FF68FF69FF6AFF6BFF6CFF6DFF6EFF6FFF70FF71FF72FF73FF74FF75FF76FF77FF78FF79FF7AFF7BFF7CFF7DFF7EFF7FFF80FF81FF82FF83FF84FF85FF86FF87FF88FF89FF8AFF8BFF8CFF8DFF8EFF8FFF90FF91FF92FF93FF94FF95FF96FF97FF98FF99FF9AFF9BFF9CFF9DFF9EFF9FFFA0FFA1FFA2FFA3FFA4FFA5FFA6FFA7FFA8FFA9FFAAFFABFFACFFADFFAEFFAFFFB0FFB1FFB2FFB3FFB4FFB5FFB6FFB7FFB8FFB9FFBAFFBBFFBCFFBDFFBEFFBFFFC0FFC1FFC2FFC3FFC4FFC5FFC6FFC7FFC8FFC9FFCAFFCBFFCCFFCDFFCEFFCFFFD0FFD1FFD2FFD3FFD4FFD5FFD6FFD7FFD8FFD9FFDAFFDBFFDCFFDDFFDEFFDFFFE0FFE1FFE2FFE3FFE4FFE5FFE6FFE7FFE8FFE9FFEAFFEBFFECFFEDFFEEFFEFFFF0FFF1FFF2FFF3FFF4FFF5FFF6FFF7FFF8FFF9FFFAFFFBFFFCFFFDFFFEFFFF";

            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFE00; i <= 0xFFFF; i++) {
                strBuilder.append(CssStringEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFFE00; i <= 0x100020; i++) {
                strBuilder.append(CssStringEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0x10FE00; i <= 0x10FFFF; i++) {
                strBuilder.append(CssStringEscapeUtil.toCompactHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

    }



    @Test
    public void testToSixDigitHexaString() throws Exception {

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0; i <= 0x02FF; i++) {
                strBuilder.append(CssStringEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFE00; i <= 0xFFFF; i++) {
                strBuilder.append(CssStringEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

        {
            final String hexa =


            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0xFFE00; i <= 0x100020; i++) {
                strBuilder.append(CssStringEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }


        {
            final String hexa =
                    "10FE0010FE0110FE0210FE0310FE0410FE0510FE0610FE0710FE0810FE0910FE0A10FE0B10FE0C10FE0D10FE0E10FE0F10FE1010FE1110FE1210FE1310FE1410FE1510FE1610FE1710FE1810FE1910FE1A10FE1B10FE1C10FE1D10FE1E10FE1F10FE2010FE2110FE2210FE2310FE2410FE2510FE2610FE2710FE2810FE2910FE2A10FE2B10FE2C10FE2D10FE2E10FE2F10FE3010FE3110FE3210FE3310FE3410FE3510FE3610FE3710FE3810FE3910FE3A10FE3B10FE3C10FE3D10FE3E10FE3F10FE4010FE4110FE4210FE4310FE4410FE4510FE4610FE4710FE4810FE4910FE4A10FE4B10FE4C10FE4D10FE4E10FE4F10FE5010FE5110FE5210FE5310FE5410FE5510FE5610FE5710FE5810FE5910FE5A10FE5B10FE5C10FE5D10FE5E10FE5F10FE6010FE6110FE6210FE6310FE6410FE6510FE6610FE6710FE6810FE6910FE6A10FE6B10FE6C10FE6D10FE6E10FE6F10FE7010FE7110FE7210FE7310FE7410FE7510FE7610FE7710FE7810FE7910FE7A10FE7B10FE7C10FE7D10FE7E10FE7F10FE8010FE8110FE8210FE8310FE8410FE8510FE8610FE8710FE8810FE8910FE8A10FE8B10FE8C10FE8D10FE8E10FE8F10FE9010FE9110FE9210FE9310FE9410FE9510FE9610FE9710FE9810FE9910FE9A10FE9B10FE9C10FE9D10FE9E10FE9F10FEA010FEA110FEA210FEA310FEA410FEA510FEA610FEA710FEA810FEA910FEAA10FEAB10FEAC10FEAD10FEAE10FEAF10FEB010FEB110FEB210FEB310FEB410FEB510FEB610FEB710FEB810FEB910FEBA10FEBB10FEBC10FEBD10FEBE10FEBF10FEC010FEC110FEC210FEC310FEC410FEC510FEC610FEC710FEC810FEC910FECA10FECB10FECC10FECD10FECE10FECF10FED010FED110FED210FED310FED410FED510FED610FED710FED810FED910FEDA10FEDB10FEDC10FEDD10FEDE10FEDF10FEE010FEE110FEE210FEE310FEE410FEE510FEE610FEE710FEE810FEE910FEEA10FEEB10FEEC10FEED10FEEE10FEEF10FEF010FEF110FEF210FEF310FEF410FEF510FEF610FEF710FEF810FEF910FEFA10FEFB10FEFC10FEFD10FEFE10FEFF10FF0010FF0110FF0210FF0310FF0410FF0510FF0610FF0710FF0810FF0910FF0A10FF0B10FF0C10FF0D10FF0E10FF0F10FF1010FF1110FF1210FF1310FF1410FF1510FF1610FF1710FF1810FF1910FF1A10FF1B10FF1C10FF1D10FF1E10FF1F10FF2010FF2110FF2210FF2310FF2410FF2510FF2610FF2710FF2810FF2910FF2A10FF2B10FF2C10FF2D10FF2E10FF2F10FF3010FF3110FF3210FF3310FF3410FF3510FF3610FF3710FF3810FF3910FF3A10FF3B10FF3C10FF3D10FF3E10FF3F10FF4010FF4110FF4210FF4310FF4410FF4510FF4610FF4710FF4810FF4910FF4A10FF4B10FF4C10FF4D10FF4E10FF4F10FF5010FF5110FF5210FF5310FF5410FF5510FF5610FF5710FF5810FF5910FF5A10FF5B10FF5C10FF5D10FF5E10FF5F10FF6010FF6110FF6210FF6310FF6410FF6510FF6610FF6710FF6810FF6910FF6A10FF6B10FF6C10FF6D10FF6E10FF6F10FF7010FF7110FF7210FF7310FF7410FF7510FF7610FF7710FF7810FF7910FF7A10FF7B10FF7C10FF7D10FF7E10FF7F10FF8010FF8110FF8210FF8310FF8410FF8510FF8610FF8710FF8810FF8910FF8A10FF8B10FF8C10FF8D10FF8E10FF8F10FF9010FF9110FF9210FF9310FF9410FF9510FF9610FF9710FF9810FF9910FF9A10FF9B10FF9C10FF9D10FF9E10FF9F10FFA010FFA110FFA210FFA310FFA410FFA510FFA610FFA710FFA810FFA910FFAA10FFAB10FFAC10FFAD10FFAE10FFAF10FFB010FFB110FFB210FFB310FFB410FFB510FFB610FFB710FFB810FFB910FFBA10FFBB10FFBC10FFBD10FFBE10FFBF10FFC010FFC110FFC210FFC310FFC410FFC510FFC610FFC710FFC810FFC910FFCA10FFCB10FFCC10FFCD10FFCE10FFCF10FFD010FFD110FFD210FFD310FFD410FFD510FFD610FFD710FFD810FFD910FFDA10FFDB10FFDC10FFDD10FFDE10FFDF10FFE010FFE110FFE210FFE310FFE410FFE510FFE610FFE710FFE810FFE910FFEA10FFEB10FFEC10FFED10FFEE10FFEF10FFF010FFF110FFF210FFF310FFF410FFF510FFF610FFF710FFF810FFF910FFFA10FFFB10FFFC10FFFD10FFFE10FFFF";

            final StringBuilder strBuilder = new StringBuilder();
            for (int i = 0x10FE00; i <= 0x10FFFF; i++) {
                strBuilder.append(CssStringEscapeUtil.toSixDigitHexa(i, (char) 0x0, 4));
            }

            final String result = strBuilder.toString();
            Assertions.assertEquals(hexa, result);
        }

    }



    public AuxEscapeTest() {
        super();
    }


}

